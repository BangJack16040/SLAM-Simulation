function [out1,out2,out3,out4] = ginputax(ax,arg1)

out1 = []; out2 = []; out3 = []; y = [];
c = computer;
if ~strcmp(c(1:2),'PC')
    tp = get(0,'TerminalProtocol');
else
    tp = 'micro';
end

if ~strcmp(tp,'none') && ~strcmp(tp,'x') && ~strcmp(tp,'micro'),
    if nargout == 1,
        if nargin == 2,
            out1 = trmginput(ax,arg1);
        elseif nargin == 1,
            out1 = trmginput(ax);
        else
            out1 = trmginput;
        end
    elseif nargout == 2 || nargout == 0,
        if nargin == 2,
            [out1,out2] = trmginput(ax,arg1);
        elseif nargin == 1,
            [out1,out2] = trmginput(ax);
        else
            [out1,out2] = trmginput;
        end
        if  nargout == 0
            out1 = [ out1 out2 ];
        end
    elseif nargout == 3,
        if nargin == 2,
            [out1,out2,out3] = trmginput(ax,arg1);
        elseif nargin == 1,
            [out1,out2,out3] = trmginput(ax);
        else
            [out1,out2,out3] = trmginput;
        end
    elseif nargout == 4,
        if nargin == 2,
            [out1,out2,out3,out4] = trmginput(ax,arg1);
        elseif nargin == 1,
            [out1,out2,out3,out4] = trmginput(ax);
        else
            [out1,out2,out3,out4] = trmginput;
        end
    end
else
    
    fig = gcf;
    figure(gcf);
    
    if nargin < 2
        how_many = -1;
        b = [];
    else
        how_many = arg1;
        b = [];
        if  ischar(how_many) ...
                || size(how_many,1) ~= 1 || size(how_many,2) ~= 1 ...
                || ~(fix(how_many) == how_many) ...
                || how_many < 0
            error(message('MATLAB:ginput:NeedPositiveInt'))
        end
        if how_many == 0

            
            warning (message('MATLAB:ginput:InputArgumentZero'));
        end
    end
    
    if nargin<2
        ax=[];
    end
    initialState = setupFcn(fig,ax);
     
    c = onCleanup(@() restoreFcn(initialState));
       

    drawnow
    char = 0;
    
    while how_many ~= 0

        outax=[];
        waserr = 0;
        try
            keydown = wfbp;
        catch %#ok<CTCH>
            waserr = 1;
        end
        if(waserr == 1)
            if(ishghandle(fig))
                cleanup(c);
                error(message('MATLAB:ginput:Interrupted'));
            else
                cleanup(c);
                error(message('MATLAB:ginput:FigureDeletionPause'));
            end
        end
        
        figchildren = allchild(0);
        if ~isempty(figchildren)
            ptr_fig = figchildren(1);
        else
            error(message('MATLAB:ginput:FigureUnavailable'));
        end

        if(ptr_fig == fig)
            if keydown
                char = get(fig, 'CurrentCharacter');
                button = abs(get(fig, 'CurrentCharacter'));
            else
                button = get(fig, 'SelectionType');
                if strcmp(button,'open')
                    button = 1;
                elseif strcmp(button,'normal')
                    button = 1;
                elseif strcmp(button,'extend')
                    button = 2;
                elseif strcmp(button,'alt')
                    button = 3;
                else
                    error(message('MATLAB:ginput:InvalidSelection'))
                end
            end
            axes_handle = gca;
            drawnow;
            pt = get(axes_handle, 'CurrentPoint');
            
            outax=find(ax==axes_handle);
            
            how_many = how_many - 1;
            
            if(char == 13) % & how_many ~= 0)

                break;
            end
            
            out1 = [out1;pt(1,1)]; %#ok<AGROW>
            y = [y;pt(1,2)]; %#ok<AGROW>
            b = [b;button]; %#ok<AGROW>
        end
    end
    

    cleanup(c);
    
    if nargout > 1
        out2 = y;
        if nargout > 2
            out3 = b;
            if nargout > 3
                out4=outax;
            end
        end
    else
        out1 = [out1 y];
    end
    
end
end

function key = wfbp

fig = gcf;
current_char = []; %#ok<NASGU>

waserr = 0;
try
    h=findall(fig,'Type','uimenu','Accelerator','C');   % Disabling ^C for edit menu so the only ^C is for
    set(h,'Accelerator','');                            % interrupting the function.
    keydown = waitforbuttonpress;
    current_char = double(get(fig,'CurrentCharacter')); % Capturing the character.
    if~isempty(current_char) && (keydown == 1)          % If the character was generated by the
        if(current_char == 3)                           % current keypress AND is ^C, set 'waserr'to 1
            waserr = 1;                                 % so that it errors out.
        end
    end
    
    set(h,'Accelerator','C');                           % Set back the accelerator for edit menu.
catch %#ok<CTCH>
    waserr = 1;
end
drawnow;
if(waserr == 1)
    set(h,'Accelerator','C');                          % Set back the accelerator if it errored out.
    error(message('MATLAB:ginput:Interrupted'));
end

if nargout>0, key = keydown; end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
end

function initialState = setupFcn(fig,ax)

initialState.figureHandle = fig; 

initialState.uisuspendState = uisuspend(fig);

initialState.toolbar = findobj(allchild(fig),'flat','Type','uitoolbar');
if ~isempty(initialState.toolbar)
    initialState.ptButtons = [uigettool(initialState.toolbar,'Plottools.PlottoolsOff'), ...
        uigettool(initialState.toolbar,'Plottools.PlottoolsOn')];
    initialState.ptState = get (initialState.ptButtons,'Enable');
    set (initialState.ptButtons,'Enable','off');
end


set(fig,'WindowButtonMotionFcn',@(o,e) dummy(fig,ax));


initialState.fig_units = get(fig,'Units');
end

function restoreFcn(initialState)
if ishghandle(initialState.figureHandle)

    set(initialState.figureHandle,'Units',initialState.fig_units);
    set(initialState.figureHandle,'WindowButtonMotionFcn','');
    
    if ~isempty(initialState.toolbar) && ~isempty(initialState.ptButtons)
        set (initialState.ptButtons(1),'Enable',initialState.ptState{1});
        set (initialState.ptButtons(2),'Enable',initialState.ptState{2});
    end
    
    uirestore(initialState.uisuspendState);
end
end

function dummy(fig,ax)


set(fig,'Pointer','arrow')
posfig = getpixelposition(fig);
for i=1:length(ax)
    posax = getpixelposition(ax(i));
    pos = get(0,'PointerLocation');
    if  pos(1)>posax(1)+posfig(1) && pos(1)<posax(1)+posax(3)+posfig(1) ...
     && pos(2)>posax(2)+posfig(2) && pos(2)<posax(2)+posax(4)+posfig(2)
        set(fig,'Pointer','crosshair')
    end
end

end

function cleanup(c)
if isvalid(c)
    delete(c);
end
end
